{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\palsahu\\\\React-Practice\\\\JWT-Authentication\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  });\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"sources":["C:/Users/palsahu/React-Practice/JWT-Authentication/src/store/auth-context.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime()\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\")\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\")\r\n\r\n  const remainingTime = calculateRemainingTime(storedExpirationDate)\r\n\r\n  if (remainingTime <= 60000){\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationTime')\r\n    return null;\r\n  }\r\n\r\n  return{\r\n    token: storedToken,\r\n    duration: remainingTime\r\n  }\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = retrieveStoredToken();\r\n  let initialToken;\r\n  if(tokenData){\r\n    initialToken = tokenData.token\r\n  }\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n\r\n    if(logoutTimer){\r\n      clearTimeout(logoutTimer)\r\n    }\r\n  });\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expirationTime\", expirationTime)\r\n\r\n    const remainingTime = calculateRemainingTime(expirationTime);\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime)\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(tokenData){\r\n      console.log(tokenData.duration)\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration)\r\n    }\r\n  },[tokenData, logoutHandler])\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}